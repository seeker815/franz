#!/usr/bin/env ruby
require 'json'
require 'thread'

require 'bunny'
require 'franz'

Thread.abort_on_exception = true

configs = [{
  type: :one,
  includes: %w[ /Users/sclemmer/Desktop/fun/tmp/* ],
  multiline: /^\d/
}]

input = Franz::BoundedQueue.new 4096

state = File.read('franz.state') rescue nil
state = Marshal.load(state) unless state.nil?

begin
  fout = Franz::Output.new \
    input: input

  fin = Franz::Input.new \
    output: input,
    configs: configs,
    disover_interval: 5,
    watch_interval: 2,
    eviction_interval: 10,
    flush_interval: 5,
    state: state

  fout.join

rescue Interrupt
  $stderr.puts
  $stderr.print 'Draining... '
  File.open('franz.state', 'w') do |f|
    f.write Marshal.dump(fin.stop)
  end
  $stderr.puts 'Done!'
end