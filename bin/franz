#!/usr/bin/env ruby
require 'json'
require 'thread'
require 'logger'

require 'bunny'
require 'trollop'
require 'franz'


# If we find a local config, try to use it
config = nil
%w[
  config.json
  %{HOME}/.franz.json
  /etc/franz/franz.json
].each do |path|
  config = path % ENV
  break if File.exist? config
end

opts = Trollop::options(ARGV) do
  version Franz::VERSION
  banner Franz::ART + "\n\n" + <<-EOS.gsub(/^    /, '')
    #{Franz::SUMMARY}

    Usage: franz [<options>]

    Options:
  EOS
  opt 'config', 'Configuration file to use', type: :string, default: config
  opt 'debug',  'Enable debugging output', default: false
end

Thread.abort_on_exception = true

level  = opts['debug'] ? ::Logger::DEBUG : ::Logger::INFO
logger = Franz::Logger.spawn level
config = Franz::Config.load opts['config']
state  = File.read(config[:state]) rescue nil
unless state.nil?
  state = Marshal.load state
  logger.info 'Loaded!'
end

begin
  io = Franz::Queue.new

  fout = Franz::Output::Rabbitmq.new \
    input: io,
    output: config[:output][:rabbitmq],
    logger: logger

  fin = Franz::Input.new \
    input: config[:input],
    output: io,
    state: state,
    logger: logger

  fout.join

rescue Interrupt
  logger.info 'Saving... '
  File.open(config[:state], 'w') do |f|
    f.write Marshal.dump(fin.stop)
  end
end