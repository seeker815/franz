#!/usr/bin/env ruby
require 'json'
require 'thread'

require 'bunny'
require 'franz'

Thread.abort_on_exception = true

config = nil
%w[
  config.json
  %{HOME}/.franz.json
  /etc/franz/franz.json
].each do |path|
  config = Franz::Config.load path % ENV rescue nil
  break unless config.nil?
end

state = File.read(config[:state]) rescue nil
unless state.nil?
  $stderr.print 'Loading... '
  state = Marshal.load state
  $stderr.puts 'Done!'
end

begin
  io = Franz::Queue.new

  fout = Franz::Output.new \
    input: io,
    output: config[:output]

  fin = Franz::Input.new \
    input: config[:input],
    output: io,
    state: state

  fout.join

rescue Interrupt
  $stderr.puts
  $stderr.print 'Saving... '
  File.open(config[:state], 'w') do |f|
    f.write Marshal.dump(fin.stop)
  end
  $stderr.puts 'Done!'
end